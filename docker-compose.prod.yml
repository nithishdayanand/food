services:
    api:
        build:
            context: ./docker/api
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${CLUEBOTS_GROUP_ID}'
                WWWUSER: '${CLUEBOTS_USER_ID}'
        image: foodify/api:latest
        environment:
            WWWUSER: '${CLUEBOTS_USER_ID}'
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - './api:/var/www/html'
        networks:
            - app-net
        depends_on:
            - mariadb
            - redis
    admin:
        build:
            context: ./docker/frontend
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${CLUEBOTS_GROUP_ID}'
                WWWUSER: '${CLUEBOTS_USER_ID}'
        image: foodify/nuxt:latest
        environment:
            WWWUSER: '${CLUEBOTS_USER_ID}'
            APP_ENV: '${APP_ENV}'
            NUXT_PUBLIC_APP_DOMAIN: '${APP_DOMAIN}'
            NUXT_PUBLIC_ADMIN_DOMAIN: '${ADMIN_DOMAIN}'
            NUXT_PUBLIC_CUSTOMER_DOMAIN: '${CUSTOMER_DOMAIN}'
            HOST: 0.0.0.0
            GITHUB_PACKAGE_REGISTRY_TOKEN: '${GITHUB_PACKAGE_REGISTRY_TOKEN}'
            FONTAWESOME_NPM_AUTH_TOKEN: '${FONTAWESOME_NPM_AUTH_TOKEN}'
            PROJECT_FOLDER: 'admin'
        volumes:
            - './frontends:/var/www/html'
            - './docker/nginx/certs:/var/www/certs'
        networks:
            - app-net
    app:
        build:
            context: ./docker/frontend
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${CLUEBOTS_GROUP_ID}'
                WWWUSER: '${CLUEBOTS_USER_ID}'
        image: foodify/nuxt:latest
        environment:
            WWWUSER: '${CLUEBOTS_USER_ID}'
            APP_ENV: '${APP_ENV}'
            NUXT_PUBLIC_APP_DOMAIN: '${APP_DOMAIN}'
            NUXT_PUBLIC_CUSTOMER_DOMAIN: '${CUSTOMER_DOMAIN}'
            HOST: 0.0.0.0
            GITHUB_PACKAGE_REGISTRY_TOKEN: '${GITHUB_PACKAGE_REGISTRY_TOKEN}'
            FONTAWESOME_NPM_AUTH_TOKEN: '${FONTAWESOME_NPM_AUTH_TOKEN}'
            PROJECT_FOLDER: 'app'
        volumes:
            - './frontends:/var/www/html'
            - './docker/nginx/certs:/var/www/certs'
        networks:
            - app-net
    nginx:
        build:
            context: ./docker/nginx
            dockerfile: production/Dockerfile
            args:
                WWWGROUP: '${CLUEBOTS_GROUP_ID}'
                WWWUSER: '${CLUEBOTS_USER_ID}'
                APP_ENV: '${APP_ENV}'
                APP_DOMAIN: '${APP_DOMAIN}'
                ADMIN_DOMAIN: '${ADMIN_DOMAIN}'
                CUSTOMER_DOMAIN: '${CUSTOMER_DOMAIN}'
        image: foodify/nginx:latest
        ports:
            - '0.0.0.0:${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${CLUEBOTS_USER_ID}'
        volumes:
            - './api:/var/www/html'
            - './frontends:/var/www/frontends'
            - './deployment/nginx/conf.d:/etc/nginx/conf.d/'
        networks:
            - app-net
        depends_on:
            - api
            - admin
            - app
            - mariadb
    mariadb:
        image: 'mariadb:10'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
        volumes:
            - 'app-mariadb:/var/lib/mysql'
        networks:
            - app-net
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        volumes:
            - 'app-redis:/data'
        networks:
            - app-net
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    app-net:
        driver: bridge
volumes:
    app-mariadb:
        driver: local
    app-redis:
        driver: local
